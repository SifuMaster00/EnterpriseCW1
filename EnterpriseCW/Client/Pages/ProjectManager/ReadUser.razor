@page "/Users/details/{Id:guid}"

@inject NavigationManager Navigation
@inject HttpClient Http


<h4>User Name:</h4>
<p>
    <h3>@User.Name</h3>
</p>

<h4>User Email:</h4>
<p>
    <h3>@User.Email</h3>
</p>

<h4>User UserName:</h4>
<p>
    <h3>@User.UserName</h3>
</p>



@code {
    [Parameter]
    public Guid Id { get; set; }
    private User User { get; set; } = new User();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            //await Http.DeleteAsync($"/api/Todos/{Id}");
            User = await Http.GetFromJsonAsync<User>($"/api/Users/{Id}");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
        catch (Exception e)
        {

        }
    }


    private async void HandleValidSubmit()
    {
        try
        {

            //var respone = await Http.PutAsJsonAsync($"/api/Todos/{Todo.Id}", Todo);
            //respone.EnsureSuccessStatusCode();

            //var content = await respone.Content.ReadAsStringAsync();
            //var todo = JsonConvert.DeserializeObject<Todo>(content);

            Navigation.NavigateTo($"/Userr");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
        catch (Exception)
        {

            throw;
        }


    }

}
